"""Add new columns to Device model

Revision ID: c4da7c1cce1c
Revises: 
Create Date: 2025-04-26 10:03:47.186298

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c4da7c1cce1c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('devices', schema=None) as batch_op:
        batch_op.add_column(sa.Column('active', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('status', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('last_seen', sa.DateTime(), nullable=True))
        batch_op.alter_column('school_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.create_index(batch_op.f('ix_devices_mac_address'), ['mac_address'], unique=True)

    with op.batch_alter_table('season_config', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['school_id'])
        batch_op.drop_constraint(None, type_='foreignkey')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('season_config', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'schools', ['school_id'], ['id'])
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('devices', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_devices_mac_address'))
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('school_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('last_seen')
        batch_op.drop_column('status')
        batch_op.drop_column('active')

    # ### end Alembic commands ###
